name: deploy service

on:
  push:
    branches:
      - main

jobs:
  ssh-agent: # Job 이름
    runs-on: ubuntu-24.04 # GitHub 워크스페이스 환경

    steps: # 실행할 작업(step)
      - name: Checkout code
        uses: actions/checkout@v4

      # GitHub Actions Cache 설정
      - name: Cache Docker Layers
        uses: actions/cache@v4.2.0
        with:
          path: /tmp/.buildx-cache  # 캐시로 관리할 경로
          key: memo-docker-image-cache-${{ github.sha }}  # 불러올 캐시 이름(식별자)
          restore-keys: memo-docker-image-cache # 만약 캐시 key를 찾지 못 할 경우 대체할 키 패턴

      - name: Run SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 환경 변수 설정
      - name: Create .env file
        run: |
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "DOMAIN={{ secrets.DOMAIN }}" >> .env
          echo "ARI_URL={{ secrets.ARI_URL }}" >> .env

      - name: Add Remote Server Fingerprint to Known Hosts
        run: ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Buildkit Builder
        run: |
          docker buildx create --use --name buildkit
          docker buildx use buildkit

      - name: Login DockerHub
        run: echo '${{ secrets.DOCKER_PASSWORD}}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

      - name: Docker Image Build
        run: docker compose -f docker-compose.yml build

      - name: Docker Image Push
        run: docker compose -f docker-compose.yml push

      - name: Copy .env / docker-compose.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml,.env"
          target: "~/github-actions-work-directory"

      - name: Debug environment variables
        run: |
          echo "DOMAIN is set: ${{ secrets.DOMAIN != '' }}"
          echo "DOMAIN length: ${{ length(secrets.DOMAIN) }}"

      - name: Pull Image & Up Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/github-actions-work-directory
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml down
            docker compose -f docker-compose.yml up -d
